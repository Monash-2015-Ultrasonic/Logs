/*
 * FILE: 				RuntimeFunctions.h
 * AUTHORS:				Catherine ATTARD & Ian HUA
 * DATE LAST MODIFIED:	23 October 2015
 *
 * DESCRIPTION:			Catherine: 	Initialisation sequence for linear system of equations, functions to find Determinant, Transpose, Matrix Multiplication
 * 						Catherine: 	Algorithm to determine R, Yaw and Elevation, Convert those results into CM DEG and integers
 *
 *						Ian:		Quadratic Interpolator to determine better arrival time from returned Absolute Peak from RTL
 *						Ian:		Channel Sampler and bit manipulation to retrieve 64-bit correlation data
 *
 */

#include "alt_types.h"

#ifndef _RUNTIMEFUNCTIONS_H_
#define _RUNTIMEFUNCTIONS_H_

int distance;
alt_u64 CH0_nOut, CH1_nOut, CH2_nOut, CH3_nOut;

alt_u64 qInterp(int precision, int n1, alt_u64 Yn1num, alt_u64 Yn1den, alt_u64 Yn2num, alt_u64 Yn2den, alt_u64 Yn3num, alt_u64 Yn3den);
void sampleChannels(void);
void Display_Results(int mode, float R, float phi, float theta);




int calc_mode;
/* Function declarations */
void find_constants();
void find_coordinates(float *L, int N, int mode, float *R, float *phi, float *theta);
void convert_results(float *R, float *phi, float *theta);
void find_denominator(int *k_valid, int n, int mode, float (*MTptr)[3][5], float (*MTMptr)[3][3], float *detMTMptr);
float determinant(float M[3][3], int n);
void transpose(float M[5][3], float (*MTptr)[3][5], int m, int n);
void matrix_multiply(float B[3][5], int m, int n, float C[5][3], int p, float (*BCptr)[3][3]);
int float2int(float r);

#endif
